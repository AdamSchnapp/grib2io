[{"fullname": "grib2io", "modulename": "grib2io", "qualname": "", "type": "module", "doc": "<h1 id=\"introduction\">Introduction</h1>\n\n<p>grib2io is a Python package that provides an interface to the NCEP GRIB2 C (g2c) library for the purpose\nof reading and writing GRIB2 Messages.  WMO GRIdded Binary, Edition 2 (GRIB2) files store 2-D meteorological\ndata. A physical file can contain one or more GRIB2 messages.  File IO is handled in Python returning\na binary string of the GRIB2 message which is then passed to the g2c library for decoding or GRIB2 metadata\nand unpacking of data.</p>\n"}, {"fullname": "grib2io.open", "modulename": "grib2io", "qualname": "open", "type": "class", "doc": "<p>GRIB2 File Object.  A physical file can contain one or more GRIB2 messages.  When instantiated,\nclass <code>grib2io.open</code>, the file named <code>filename</code> is opened for reading (<code>mode = 'r'</code>) and is\nautomatically indexed.  The indexing procedure reads some of the GRIB2 metadata for all GRIB2 Messages.</p>\n\n<p>A GRIB2 Message may contain submessages whereby Section 2-7 can be repeated.  grib2io accommodates\nfor this by flattening any GRIB2 submessages into multiple individual messages.</p>\n\n<h2 id=\"attributes\">Attributes</h2>\n\n<p><strong><code>mode : str</code></strong></p>\n\n<p>Mode of opening the file.  For reading, <code>mode = 'rb'</code> and writing, mode = 'wb'.</p>\n\n<p><strong><code>name : str</code></strong></p>\n\n<p>Full path name of the GRIB2 file.</p>\n\n<p><strong><code>messages : int</code></strong></p>\n\n<p>Count of GRIB2 Messages contained in the file.</p>\n\n<p><strong><code>current_message : int</code></strong></p>\n\n<p>Current position of the file in units of GRIB2 Messages.</p>\n\n<p><strong><code>size : int</code></strong></p>\n\n<p>Size of the file in units of bytes.</p>\n\n<p><strong><code>closed : bool</code></strong></p>\n\n<p>Bool signaling if the file is closed <strong><code>True</code></strong> or open <strong><code>False</code></strong>.</p>\n\n<p><strong><code>shortNames : tuple</code></strong></p>\n\n<p>Tuple of unique short names (i.e. GRIB2 abbreviation names) for each message.</p>\n"}, {"fullname": "grib2io.open.__init__", "modulename": "grib2io", "qualname": "open.__init__", "type": "function", "doc": "<p>Class Constructor</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p><strong><code>filename : str</code></strong></p>\n\n<p>File name.</p>\n\n<p><strong><code>mode : str, optional, default = 'r'</code></strong></p>\n\n<p>File handle mode.  The default is open for reading ('r').</p>\n", "parameters": ["self", "filename", "mode"], "funcdef": "def"}, {"fullname": "grib2io.open.close", "modulename": "grib2io", "qualname": "open.close", "type": "function", "doc": "<p>Close the file handle</p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "grib2io.open.read", "modulename": "grib2io", "qualname": "open.read", "type": "function", "doc": "<p>Read num GRIB2 messages from the current position</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p><strong><code>num : int</code></strong></p>\n\n<p>Number of GRIB2 Message to read.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p><strong><code>list</code></strong></p>\n\n<p>List of <code>grib2io.Grib2Message</code> instances.</p>\n", "parameters": ["self", "num"], "funcdef": "def"}, {"fullname": "grib2io.open.rewind", "modulename": "grib2io", "qualname": "open.rewind", "type": "function", "doc": "<p>Set the position of the file to zero in units of GRIB2 messages.</p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "grib2io.open.seek", "modulename": "grib2io", "qualname": "open.seek", "type": "function", "doc": "<p>Set the position within the file in units of GRIB2 messages.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p><strong><code>pos : int</code></strong></p>\n\n<p>GRIB2 Message number to set the read pointer to.</p>\n", "parameters": ["self", "pos"], "funcdef": "def"}, {"fullname": "grib2io.open.tell", "modulename": "grib2io", "qualname": "open.tell", "type": "function", "doc": "<p>Returns the position of the file in units of GRIB2 Messages.</p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "grib2io.open.select", "modulename": "grib2io", "qualname": "open.select", "type": "function", "doc": "<p>Returns a list of <code>grib2io.Grib2Message</code> instances filtered by\n<strong><code>**kwargs</code></strong>.</p>\n\n<p>The following keywords are currently supported:</p>\n\n<p><strong><code>duration : int</code></strong></p>\n\n<p><strong><code>leadTime : int</code></strong></p>\n\n<p><strong><code>level : str</code></strong></p>\n\n<p><strong><code>refDate : int</code></strong></p>\n\n<p><strong><code>shortName : str</code></strong></p>\n", "parameters": ["self", "kwargs"], "funcdef": "def"}, {"fullname": "grib2io.Grib2Message", "modulename": "grib2io", "qualname": "Grib2Message", "type": "class", "doc": "<p></p>\n"}, {"fullname": "grib2io.Grib2Message.__init__", "modulename": "grib2io", "qualname": "Grib2Message.__init__", "type": "function", "doc": "<p>Class Constructor</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p><strong><code>msg : bytes</code></strong></p>\n\n<p>Binary string representing the GRIB2 Message read from file.</p>\n\n<p><strong><code>source : grib2io.open, optional</code></strong></p>\n\n<p>Source of where where this GRIB2 message originated from\n(i.e. the input file). This allow for interaction with the\ninstance of <code>grib2io.open</code>. Default is None.</p>\n\n<p><strong><code>num : int, optional</code></strong></p>\n\n<p>GRIB2 Message number from <code>grib2io.open</code>. Default value is -1.</p>\n", "parameters": ["self", "msg", "source", "num"], "funcdef": "def"}, {"fullname": "grib2io.Grib2Message.data", "modulename": "grib2io", "qualname": "Grib2Message.data", "type": "function", "doc": "<p>Returns an unpacked data grid.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p><strong><code>fill_value : float, optional</code></strong></p>\n\n<p>Missing or masked data is filled with this value or default value given by\n<code>DEFAULT_FILL_VALUE</code>.</p>\n\n<p><strong><code>masked_array : bool, optional</code></strong></p>\n\n<p>When <code>True</code> [DEFAULT], return masked array if there is bitmap for missing or masked data.</p>\n\n<p><strong><code>expand : bool, optional</code></strong></p>\n\n<p>When <code>True</code> [DEFAULT], ECMWF 'reduced' gaussian grids are expanded to regular gaussian grids.</p>\n\n<p><strong><code>order : int, optional</code></strong></p>\n\n<p>If 0 [DEFAULT], nearest neighbor interpolation is used if grid has missing or bitmapped \nvalues. If 1, linear interpolation is used for expanding reduced gaussian grids.</p>\n\n<p><strong><code>map_keys : bool, optional</code></strong></p>\n\n<p>When <code>True</code>, data values will be mapped to the appropriate key data.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p><strong><code>numpy.ndarray</code></strong></p>\n\n<p>A numpy.ndarray with shape (ny,nx). By default the array dtype=np.float32, but\ncould be np.int32 if Grib2Message.typeOfValues is integer.  The array dtype will\nbe string-based if map_keys=True.</p>\n", "parameters": ["self", "fill_value", "masked_array", "expand", "order", "map_keys"], "funcdef": "def"}, {"fullname": "grib2io.Grib2Message.latlons", "modulename": "grib2io", "qualname": "Grib2Message.latlons", "type": "function", "doc": "<p>Alias for <code>grib2io.Grib2Message.grid</code> method</p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "grib2io.Grib2Message.grid", "modulename": "grib2io", "qualname": "Grib2Message.grid", "type": "function", "doc": "<p>Return lats,lons (in degrees) of grid. Currently can handle reg. lat/lon, \nglobal gaussian, mercator, stereographic, lambert conformal, albers equal-area, \nspace-view and azimuthal equidistant grids.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p><strong><code>lats, lons : numpy.ndarray</code></strong></p>\n\n<p>Returns two numpy.ndarrays with dtype=numpy.float32 of grid latitudes and\nlongitudes in units of degrees.</p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "grib2io.Grib2Metadata", "modulename": "grib2io", "qualname": "Grib2Metadata", "type": "class", "doc": "<p>Class to hold GRIB2 metadata both as numeric code value as stored in\nGRIB2 and its decoded meaning.</p>\n\n<p><strong><code>value : int</code></strong></p>\n\n<p>GRIB2 metadata integer code value.</p>\n\n<p><strong><code>table : str, optional</code></strong></p>\n\n<p>GRIB2 table to lookup the <code>value</code>. Default is None.</p>\n"}, {"fullname": "grib2io.Grib2Metadata.__init__", "modulename": "grib2io", "qualname": "Grib2Metadata.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "value", "table"], "funcdef": "def"}, {"fullname": "grib2io.tables", "modulename": "grib2io.tables", "qualname": "", "type": "module", "doc": "<p></p>\n"}, {"fullname": "grib2io.tables.get_table", "modulename": "grib2io.tables", "qualname": "get_table", "type": "function", "doc": "<p>Return GRIB2 code table as a dictionary.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p><strong><code>table : str</code></strong></p>\n\n<p>Code table number.  Example: '1.0'</p>\n\n<p><strong><code>expand : bool</code></strong></p>\n\n<p>When <strong><code>True</code></strong>, expand output dictionary where keys are a range. Default is <strong><code>false</code></strong></p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p><strong><code>dict</code></strong></p>\n", "parameters": ["table", "expand"], "funcdef": "def"}, {"fullname": "grib2io.tables.get_value_from_table", "modulename": "grib2io.tables", "qualname": "get_value_from_table", "type": "function", "doc": "<p>Return the meaning/definition given a GRIB2 code table <code>value</code> and <code>table</code>.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p><strong><code>value : str</code></strong></p>\n\n<p>Code table value.  Function will convert integer to string.  Example: '5'</p>\n\n<p><strong><code>table : str</code></strong></p>\n\n<p>Code table number.  Example: '1.0'</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p><strong><code>str</code> or <code>list</code></strong></p>\n", "parameters": ["value", "table"], "funcdef": "def"}, {"fullname": "grib2io.tables.get_varname_from_table", "modulename": "grib2io.tables", "qualname": "get_varname_from_table", "type": "function", "doc": "<p>Return the GRIB2 variable name information given values of <code>discipline</code>,\n<code>parmcat</code>, and <code>parmnum</code>. NOTE: This functions allows for all arguments\nto be converted to a string type if arguments are integer.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p><strong><code>discipline : str</code></strong></p>\n\n<p>Discipline code value of a GRIB2 message.</p>\n\n<p><strong><code>parmcat : str</code></strong></p>\n\n<p>Parameter Category value of a GRIB2 message.</p>\n\n<p><strong><code>parmnum : str</code></strong></p>\n\n<p>Parameter Number value of a GRIB2 message.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p><strong><code>tuple</code></strong> </p>\n\n<p>In order, variable full name, units, and short (abbreviated) name</p>\n", "parameters": ["discipline", "parmcat", "parmnum"], "funcdef": "def"}, {"fullname": "grib2io.tables.originating_centers", "modulename": "grib2io.tables.originating_centers", "qualname": "", "type": "module", "doc": "<p></p>\n"}, {"fullname": "grib2io.tables.section0", "modulename": "grib2io.tables.section0", "qualname": "", "type": "module", "doc": "<p></p>\n"}, {"fullname": "grib2io.tables.section1", "modulename": "grib2io.tables.section1", "qualname": "", "type": "module", "doc": "<p></p>\n"}, {"fullname": "grib2io.tables.section3", "modulename": "grib2io.tables.section3", "qualname": "", "type": "module", "doc": "<p></p>\n"}, {"fullname": "grib2io.tables.section4", "modulename": "grib2io.tables.section4", "qualname": "", "type": "module", "doc": "<p></p>\n"}, {"fullname": "grib2io.tables.section4_discipline0", "modulename": "grib2io.tables.section4_discipline0", "qualname": "", "type": "module", "doc": "<p></p>\n"}, {"fullname": "grib2io.tables.section4_discipline1", "modulename": "grib2io.tables.section4_discipline1", "qualname": "", "type": "module", "doc": "<p></p>\n"}, {"fullname": "grib2io.tables.section4_discipline10", "modulename": "grib2io.tables.section4_discipline10", "qualname": "", "type": "module", "doc": "<p></p>\n"}, {"fullname": "grib2io.tables.section4_discipline2", "modulename": "grib2io.tables.section4_discipline2", "qualname": "", "type": "module", "doc": "<p></p>\n"}, {"fullname": "grib2io.tables.section4_discipline3", "modulename": "grib2io.tables.section4_discipline3", "qualname": "", "type": "module", "doc": "<p></p>\n"}, {"fullname": "grib2io.tables.section4_discipline4", "modulename": "grib2io.tables.section4_discipline4", "qualname": "", "type": "module", "doc": "<p></p>\n"}, {"fullname": "grib2io.tables.section5", "modulename": "grib2io.tables.section5", "qualname": "", "type": "module", "doc": "<p></p>\n"}, {"fullname": "grib2io.utils", "modulename": "grib2io.utils", "qualname": "", "type": "module", "doc": "<p>Collection of utility functions to assist in the encoding and decoding\nof GRIB2 Messages.</p>\n"}, {"fullname": "grib2io.utils.int2bin", "modulename": "grib2io.utils", "qualname": "int2bin", "type": "function", "doc": "<p>Convert integer to binary string or list</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p><strong><code>i : int</code></strong></p>\n\n<p>Integer value to convert to binary representation.</p>\n\n<p><strong><code>nbits : int</code></strong></p>\n\n<p>Number of bits to return.  Valid values are 8 [DEFAULT], 16,\n32, and 64.</p>\n\n<p><strong><code>output : [str|int]</code></strong></p>\n\n<p>Return data as a str or int.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>A <code>str</code> or <code>int</code> binary representation of the integer value.</p>\n", "parameters": ["i", "nbits", "output"], "funcdef": "def"}, {"fullname": "grib2io.utils.putieeeint", "modulename": "grib2io.utils", "qualname": "putieeeint", "type": "function", "doc": "<p>Convert a float to a IEEE format 32 bit integer</p>\n", "parameters": ["r"], "funcdef": "def"}, {"fullname": "grib2io.utils.getieeeint", "modulename": "grib2io.utils", "qualname": "getieeeint", "type": "function", "doc": "<p>Convert an IEEE format 32 bit integer to a float</p>\n", "parameters": ["i"], "funcdef": "def"}, {"fullname": "grib2io.utils.getmd5str", "modulename": "grib2io.utils", "qualname": "getmd5str", "type": "function", "doc": "<p>Generate a MD5 hash string from input list</p>\n", "parameters": ["a"], "funcdef": "def"}, {"fullname": "grib2io.utils.getdate", "modulename": "grib2io.utils", "qualname": "getdate", "type": "function", "doc": "<p>Build an integer date from component input.</p>\n\n<p><strong><code>year : int</code></strong></p>\n\n<p>Year in 4-digit format.</p>\n\n<p><strong><code>month : int</code></strong></p>\n\n<p>Month in 2-digit format.</p>\n\n<p><strong><code>day : int</code></strong></p>\n\n<p>Day in 2-digit format.</p>\n\n<p><strong><code>hour : int</code></strong></p>\n\n<p>Hour in 2-digit format.</p>\n\n<p><strong><code>minute : int, optional</code></strong></p>\n\n<p>Minute in 2-digit format. This argument is required if second is provided, otherwise\nit is optional.</p>\n\n<p><strong><code>second : int, optional</code></strong></p>\n\n<p>Second in 2-digit format [OPTIONAL].</p>\n", "parameters": ["year", "month", "day", "hour", "minute", "second"], "funcdef": "def"}, {"fullname": "grib2io.utils.getleadtime", "modulename": "grib2io.utils", "qualname": "getleadtime", "type": "function", "doc": "<p>Computes the lead time (in units of hours) from using information from\nGRIB2 Identification Section (Section 1), Product Definition Template\nNumber, and Product Definition Template (Section 4).</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p><strong><code>idsec : array_like</code></strong></p>\n\n<p>GRIB2 Identification Section (Section 1).</p>\n\n<p><strong><code>pdtn : int</code></strong></p>\n\n<p>GRIB2 Product Definition Template Number</p>\n\n<p><strong><code>idsec : array_like</code></strong></p>\n\n<p>GRIB2 Product Definition Template (Section 4).</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p><strong><code>lt : int</code></strong></p>\n\n<p>Lead time in units of hours</p>\n", "parameters": ["idsec", "pdtn", "pdt"], "funcdef": "def"}, {"fullname": "grib2io.utils.getduration", "modulename": "grib2io.utils", "qualname": "getduration", "type": "function", "doc": "<p>Computes the duration time (in units of hours) from using information from\nProduct Definition Template Number, and Product Definition Template (Section 4).</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p><strong><code>pdtn : int</code></strong></p>\n\n<p>GRIB2 Product Definition Template Number</p>\n\n<p><strong><code>idsec : array_like</code></strong></p>\n\n<p>GRIB2 Product Definition Template (Section 4).</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p><strong><code>dur : int</code></strong></p>\n\n<p>Duration time in units of hours</p>\n", "parameters": ["pdtn", "pdt"], "funcdef": "def"}, {"fullname": "grib2io.utils.decode_mdl_wx_strings", "modulename": "grib2io.utils", "qualname": "decode_mdl_wx_strings", "type": "function", "doc": "<p>Decode GRIB2 Local Use Section to obtain MDL Weather Strings.  The\ndecode procedure is defined here:</p>\n\n<p>https://www.nco.ncep.noaa.gov/pmb/docs/grib2/grib2_doc/grib2_mdl_temp2-1.shtml</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p><strong><code>lus : array_like</code></strong></p>\n\n<p>GRIB2 Local Use Section containing MDL weather strings.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p><strong><code>list</code></strong></p>\n\n<p>List of weather strings.</p>\n", "parameters": ["lus"], "funcdef": "def"}, {"fullname": "grib2io.utils.decode_ndfd_wx_strings", "modulename": "grib2io.utils", "qualname": "decode_ndfd_wx_strings", "type": "function", "doc": "<p>Decode GRIB2 Local Use Section to obtain NDFD Weather Strings.  The\ndecode procedure is defined here:</p>\n\n<p>https://www.nco.ncep.noaa.gov/pmb/docs/grib2/grib2_doc/grib2_mdl_temp2-1.shtml</p>\n\n<p>NOTE: From testing, it seems how the process for packing Section 2 for NDFD\n      Weather grids is different than GMOS and thus the need for a different\n      method for decoding NDFD Wx vs. GMOS Wx.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p><strong><code>lus : array_like</code></strong></p>\n\n<p>GRIB2 Local Use Section containing NDFD weather strings.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p><strong><code>list</code></strong></p>\n\n<p>List of NDFD weather strings.</p>\n", "parameters": ["lus"], "funcdef": "def"}]